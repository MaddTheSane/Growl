//
//  GrowlMailMeDisplay.m
//  Growl Display Plugins
//
//  Copyright 2004 Mac-arena the Bored Zo. All rights reserved.
//
#import "GrowlMailMeDisplay.h"
#import "GrowlMailMePrefs.h"
#import <Message/NSMailDelivery.h>
#import <GrowlDefinesInternal.h>
#import <GrowlDisplayProtocol.h>

#define destAddressKey @"MailMe - Recipient address"

/* for when there is no icon */
#define plainTextMessageFormat @"%@\r\n"\
	@"-- This message was automatically generated by MailMe, a Growl plug-in, --\r\n"\
	@"-- in response to a Growl notification --\r\n"\
	@"-- http://growl.info/ --\r\n"

@implementation GrowlMailMeDisplay

- (id) init {
	if ((self = [super init])) {
		bundle = [[NSBundle bundleForClass:[GrowlMailMePrefs class]] retain];
		prefPane = [[GrowlMailMePrefs alloc] initWithBundle:bundle];
	}
	return self;
}

- (void) dealloc {
	[prefPane release];
	[bundle   release];
	[super dealloc];
}

- (void) loadPlugin {
}

- (void) unloadPlugin {
}

- (NSDictionary *) pluginInfo {
	return [bundle infoDictionary];
}

- (NSPreferencePane *) preferencePane {
	return prefPane;
}

- (void) displayNotificationWithInfo:(NSDictionary *)noteDict {
	READ_GROWL_PREF_VALUE(destAddressKey, @"com.Growl.MailMe", NSString *, &destAddress);

	NSString *title = [noteDict objectForKey:GROWL_NOTIFICATION_TITLE];
	NSString *desc = [noteDict objectForKey:GROWL_NOTIFICATION_DESCRIPTION];
	//hopefully something can be worked out to use the imageData.
	//documentation, Apple, documentation!
//	NSData *imageData = [noteDict objectForKey:GROWL_NOTIFICATION_ICON];

	BOOL success = [NSMailDelivery deliverMessage:[NSString stringWithFormat:plainTextMessageFormat, desc]
										  subject:title
											   to:destAddress];

	if (!success) {
		NSLog(@"(MailMe) WARNING: Could not send email message \"%@\" to address %@", title, destAddress);
		NSLog(@"(MailMe) description of notification:\n%@", desc);
	} else
		NSLog(@"(MailMe) Successfully sent message \"%@\" to address %@", title, destAddress);

	destAddress = nil;
}

@end
