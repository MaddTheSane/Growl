To-Do

For .6

- Confirm installation of plugin. Ask if user wants to configure plugin now. If so, take to proper place to configure.
	- Figure out an intuitive way to deal with multiple plugins named the same.
- For all displays that should conform, priority
- 3 or 5 parts on priority, we need to decide this
- Smoke needs to specify how many lines it allows to be displayed on screen.
- Overlapping in smoke problems need to be addressed
- Resolve problem of the framework turning on gha without the users permission, should the user have turned off Growl.
- Make GrowlTunes save images into ARTchive
- Specify license in each file. Growl is BSD, the framework is public domain, examples are public domain unless specified

Release related issues
- Make sure we have user documentation on everything we have. This was a sore point for us last release.
- Look at creating a mpkg with GrowlMail, GrowlSafari, GrowlDict, Growl, growlnotify, GrowlTunes and possibly macyac
- Include uninstaller in the dmg
- Include user documentation in the dmg
- Include links to developer documentation in the dmg. Possibly include docs themselves.


Done:
- Display version number.
- A way to check for update. We don't need to automatically check right now, just a button that reads a plist off the website.
- Make plugins double clickable bundles
	- Make default install directory for display plugins ~/Library/Application Support/Growl/Plugins
	- Applescript:
		Add support for registering applications with Growl so they show up in the PrefPane.
		
For .7

- Add a menu item/status item (menuling)
- Add profiles. Choose which profile is currently uses via prefpane or menuling
- Add a functional plugin that can display all notifications in a log. Make this accessable via the menuling
- Display positioning system needs to be implemented.
- Network notifications.
- More displays if anyone wants to do one.
- Write an abstract way for all plugins to print a ellipsis when text would spill past the edge of a notification.
- Write an abstract way for all plugins to be moved arbitrarily by the user.
- Write an abstract way for plugins to expand. Horizontal and vertical expanding. Have these off by default for all plugins.




- Growl:
	- PrefPane:
	- Growl Itself:
		save to an Application Support Directory to be accessible from the Prefpane and app 
		write the protocol to which Notification Plugins conform	
		{Easy enough to do.  I will get on this, because I am adding some features to the pref pane, and want to make some standardized thing (graphite)}
		
			then write the glue/controller for the bubbles notifications to work 

			The default notification Plugin will be in Growl.syspref/Resources/
		Add a define/macro to GrowlDefines that can get the display plugins

	- Display Plugins
		- Display types wanted:
			- A square
			- Speech
			- iCal scheduled events look
			- Garage Band black look.
			- Brushed Metal look.


- Bindings
	- REALbasic:
		REALbasic Binding needs to be finished
		Documentation on this
	- Python:
		Up to date documentation
		Write a C extension for python so we do not rely on PyObjc anymore
	- Perl:
		Setup a way for icons to be displayed
		Implementation documentation needs to be written
		Get this submitted to CPAN
			This requires making the perl module install growl if growl is not installed
	- Carbon:
	- TCL:
		Use the AppBridge to launch growl if needed. 
		Rather than building with -I../.., use the header from Growl.framework. 
		Refactor the code, primarily to separate out the Tcl<->C bits from the C<->ObjC bits. 
	- Ruby:
		Ruby Interface needs to be coded
	- Java:
		A java binding would be nice

		Documentation for the entourage and mail.app scripts. These should have screen shots, and be on the website.
			ref: http://cia.navi.cx/stats/author/the_tick/.message/2670177 for entourage.

- Sample Apps and Code:
	- Beep Specific To DO:
		Connect sheet 
	- GrowlTunes Specific To DO:
		Make GrowlTunes work with streams (e.g. iTMS previews, radio stuff)
		Grab album art from the web
			We have a plugin architecture in GrowlTunes for this.
	- growlnotify:
		Make a .pkg, install into /usr/local

- Documentation:
	Developer docs
	User Docs
