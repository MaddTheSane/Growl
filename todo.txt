To-Do

For .7

- Concentrate on networking.
	- Properly document the networking protocol
	- Decide on what we want to use for the long term (1-2 years at least)
	- Create a gui for sensibly managing the remote notifications
	- Add support to add remote machine names manually
	- Support for the gnome notifications system if it ever adds a networking protocol for its notifications
	- Use a generic icon for incoming UDP notifications. Sending an icon over the network
	  makes the packets too large.
	- Should we add password authentification to UDP notifications as well?
	- Should we be using DO? (directed at Karl)

-Functional plugins
	- Design a way for functional plugins to work
	- Move rendezvous out of display plugins into a functional plugin that would allow for any notification.
		- Make a rendezvous/network tab
		- Allow for adding hosts from outside the subnet/multicast area.
		- Use rendezvous for discovery
		- Use something decently secure
	- Add a menu item/status item (menuling)
		- For the logging and re-sending of notifications, if networking is on, maybe even forwarding recieved notifications
		- Switch default display style on the fly
		- Turn growl silent mode on, to squelch notifs but still log them
	- Add a functional plugin that can display all notifications in a log. Make this accessable via the menuling

- Uber passive registration
	- A GrowlNotifications.plist resource in App bundles that we read on their launch/install to allow them to register
	- This is for when the app would have a large amount of notifs to prepare or to seperate it out from code and make it
	  more flexible on app updates and such
	- Watching app launches and checking on apps for these resources
- Provide a way to easily get version via command line

Release related issues (.7)
 -Create a branch for the .7 release
	- Everything needs to run on 10.3 and 10.4. 
- DMG & PKG
- Make sure we have user documentation on everything we have.


For .8 (The Kitchen Sink) or sooner
- Display plugins
	- A preview button of some sort.
	- Coalescing of notifications of similar type for notifications that can use it.
	- Clicking notifications
	- Bubbles
		- Top background color colorwell
	- Figure out an intuitive way to deal with multiple plugins named the same.
	- Display positioning system needs to be implemented.
		- Write an abstract way for plugins to expand. Horizontal and vertical expanding. Have these off by default for all plugins.
	- New Display plugins
		- A square
	- Restructure all Display Plugins to inherit functionality from one global GrowlDisplayPlugin class residing in Growl.framework
		- GrowlDisplayPlugin should take care of mPositionRect, a Rect in GrowlDisplayPlugin that can trigger KeyObservation calls to edit it to not intersect with any other currently active notifications

- Preference pane redesign
	- Apps tab switch to app centric with custom View for notifications using images to represent the available options
	- first tab have Growl image and dev names, maybe even an easter egg, controls for turning features on/off 
	  ie. (GrowlHelperApp, Network Notifications, Sound to accompany notifications, Speech, Menu Item, etc)
	  And a passive update check system ( no user interaction necessary just a box for whether or not to check.
	- Display plugins tab with better looking prefs( the current ones aren't winning beauty awards )
	- Add profiles. Choose which profile is currently uses via prefpane or menuling







- Other
	- Make GrowlMail not run while applying rules if possible
	- Growltunes needs preferences.
	- Give macyac a gui for configuration/launching.

For .9 or sooner
- Downloads tab
	- This will allow for display plugins to be distributed separate from Growl itself.
	- For applications that bundle Growl, they will not have to add in multiple displays as a bad thing (due to size increase).
	- Load information from a plist.
	- Possibly allow for a webkit view to allow for artistic displays/easy previews.
	- growlview:// (or something similar) for loading display plugins
	- Only load from http://growl.info.
	- We can put displays like NSLog and MailMe here once we have this.
	- New displays can be distributed via this method. We can also use this to find out if a display plugin is the currently available version or not.
	- Some displays won't work on 10.2. In six months to a year, some won't work on 10.3. We need to prepare for this.

- Display Plugins
	- iCal scheduled events look
	- Garage Band black look.
	- Brushed Metal/Aqua

For 1.0 or sooner
- We'll probably be using 10.4 by now, let's make a webkit dispaly if feasible.

-----------------------------------------
Other stuff; old todo
-----------------------------------------


- Bindings
	- REALbasic:
		REALbasic Binding needs to be finished
		Documentation on this
	- Python:
		Up to date documentation
		Write a C extension for python so we do not rely on PyObjc anymore
	- Perl:
		Setup a way for icons to be displayed
		Implementation documentation needs to be written
		Get this submitted to CPAN
			This requires making the perl module install growl if growl is not installed
	- TCL:
		Use the AppBridge to launch growl if needed. 
		Rather than building with -I../.., use the header from Growl.framework. 
		Refactor the code, primarily to separate out the Tcl<->C bits from the C<->ObjC bits. 
	- Ruby:
		Ruby Interface needs to be coded

		Documentation for the entourage and mail.app scripts. These should have screen shots, and be on the website.
			ref: http://cia.navi.cx/stats/author/the_tick/.message/2670177 for entourage.

- Sample Apps and Code:
	- GrowlTunes Specific To DO:
		Make GrowlTunes work with streams (e.g. iTMS previews, radio stuff)
		Prefs and HotKeys
	- growlnotify:
		Make a .pkg, install into /usr/local

- Documentation:
	Developer docs
	User Docs
