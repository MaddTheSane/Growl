#!/usr/bin/python
"""
A python script that sends notifications to the Growl daemon 
See <http://Growl.info> for more information.

Requires PyObjC 1.1 <http://pyobjc.sourceforge.net/> and Python 2.3
<http://www.python.org/>.

Copyright 2004 Jeremy Rossi <jeremy@jeremyrossi.com>
Released under the BSD license.

Modified by Kevin Ballard <kevin@sb.org>
"""

import Growl
from Foundation import NSRunLoop, NSDate
from AppKit import NSWorkspace, NSImage
import getopt, sys, os.path

def usage():
    sys.stdout.write("""%s: 
    -n,--name     Specify the name of them Application that is sending the
                  notification [Default: gNotify]
    -i,--icon     Specify a filetype or extension to be used for the icon
    -I,--iconpath Specify a filepath to be used for the icon
                  This option overrides --icon
    --image       Specify an image file to be used for the icon
                  This option overrides --icon and --iconpath
    -t,--title    Title to be used in each notification [Default: gNotify]
    -m,--message  Text to be send to the daemon.  - is used to for stdin
                  For each line (IE: \\n) a new notifaction is sent
    -s,--sticky   Make this notification sticky
""" % sys.argv[0])

NOTIFICATION_NAME = 'Dynamic Messages'

def main():
	try:
		opts, args = getopt.getopt(sys.argv[1:], "n:t:m:i:I:s",
									["name=", "title=", "message=","icon=","iconpath=","image=","sticky"])
	except getopt.GetoptError:
		# print help information and exit:
		usage()
		sys.exit(2)
	
	appName = "gNotify"
	nTitle = "gNotify"
	nMsg = ""
	nIconType  = ""
	nIconPath  = ""
	nImagePath = ""
	nSticky = False
	for o, a in opts:
		if o in ("-n", "--name"): appName = a
		elif o in ("-t", "--title"): nTitle = a
		elif o in ("-m", "--message"): nMsg = a
		elif o in ("-i", "--icon"): nIconType = a
		elif o in ("-I", "--iconpath"): nIconPath = a
		elif o in ("--image"): nImagePath = a
		elif o in ("-s", "--sticky"): nSticky = True
	
	nIcon = None
	workspace = NSWorkspace.sharedWorkspace()
	if nImagePath != '':
		nImagePath = os.path.abspath(nImagePath)
		nIcon = NSImage.alloc().initWithContentsOfFile_(nImagePath).autorelease()
		if not nIcon:
			sys.stderr.write("Couldn't load file %s\n" % nImagePath)
	elif nIconPath != '':
		nIconPath = os.path.abspath(nIconPath)
		nIcon = workspace.iconForFile_(nIconPath)
		if not nIcon:
			sys.stderr.write("Couldn't load icon for %s\n" % nIconPath)
	elif nIconType != '':
		nIcon = workspace.iconForFileType_(nIconType)
		if not nIcon:
			sys.stderr.write("Couldn't load type %s\n" % nIconType)
	if nIcon is None:
		nIcon = workspace.iconForFileType_('unknown')
	
	# fetch Terminal app icon
	nAppPath = workspace.fullPathForApplication_("com.apple.Terminal")
	nAppIcon = None
	if nAppPath:
		nAppIcon = workspace.iconForFile_(nAppPath)
	
	class TestGrowlNotifier(Growl.GrowlNotifier):
		applicationName = appName
		notifications = [NOTIFICATION_NAME]
	n = TestGrowlNotifier(applicationIcon=nIcon)
	n.register()
	
	if nMsg == "-":
		while 1:
			i = sys.stdin.readline()
			if not i: break
			n.notify(NOTIFICATION_NAME, nTitle, i, appicon=nAppIcon, sticky=nSticky)
	else:
		n.notify(NOTIFICATION_NAME, nTitle, nMsg, appicon=nAppIcon, sticky=nSticky)

if __name__ == '__main__':
	main()
